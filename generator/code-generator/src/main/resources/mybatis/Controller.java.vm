package ${package}.controller;

import java.util.List;
import java.util.Map;

import com.alibaba.fastjson.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import ${package}.entity.${className};
import ${package}.service.${className}Service;
import ${package}.util.*;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */

@Controller
@RequestMapping("/${classname}" )
public class ${className}Controller extends BaseController {
    @Autowired
    private ${className}Service ${classname}Service;
    private static String pageTitle = "XXXX管理";
    private static String pageUrl = "/${classname}";

    @GetMapping()
    String ${classname}(Model model) {
        model.addAttribute("pageInfo", PageInfo.getInstance(pageUrl, pageTitle, Constant.LIST_TITLE));
        return "${classname}/${classname}";
    }

    @ResponseBody
    @GetMapping("/list" )
    public JSONObject list(@RequestParam Map<String, Object> params) {
        //查询列表数据
        Query query = new Query(params);
        List<${className}> ${classname}List = ${classname}Service.getList(query);
        int total = ${classname}Service.getCount(query);
        return renderPage(total, ${classname}List);
    }

    @GetMapping("/add" )
    String add(Model model) {
        model.addAttribute("pageInfo", PageInfo.getInstance(pageUrl, pageTitle, Constant.ADD_TITLE));
        return "${classname}/add";
    }

    @GetMapping("/edit/{${pk.attrname}}" )
    String edit(@PathVariable("${pk.attrname}" ) ${pk.attrType} ${pk.attrname}, Model model) {
        ${className} ${classname} =${classname}Service.getById(${pk.attrname});
        model.addAttribute("pageInfo", PageInfo.getInstance(pageUrl, pageTitle, Constant.EDIT_TITLE));
        model.addAttribute("${classname}", ${classname});
        return "${classname}/edit";
    }

    @RequestMapping("/saveOrUpdate" )
    @ResponseBody
    public R saveOrUpdate(${className} ${classname}) {
        String id = ${classname}.getDdlId();
        int result = 0;
        if (id == null || "".equals(id)) {
            result = ${classname}Service.save(${classname});
        } else {
            result = ${classname}Service.updateById(${classname});
        }
        if (result != 0) {
            return R.ok("操作成功!" );
        }
        return R.error("操作失败!" );
    }

    /**
     * 批量删除
     */
    @PostMapping("/batchDel" )
    @ResponseBody
    public R remove(@RequestParam("ids" ) ${pk.attrType}[]ids) {
        if (${classname}Service.batchRemove(ids) != 0) {
            return R.ok("操作成功!" );
        }
        return R.error("操作失败!" );
    }

}
